// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tsudot/cocobolo/cocobolo (interfaces: CocoboloClient,Cocobolo_MakeRequestClient)

package mock_cocobolo

import (
	gomock "github.com/golang/mock/gomock"
	cocobolo "github.com/tsudot/cocobolo/cocobolo"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

// MockCocoboloClient is a mock of CocoboloClient interface
type MockCocoboloClient struct {
	ctrl     *gomock.Controller
	recorder *MockCocoboloClientMockRecorder
}

// MockCocoboloClientMockRecorder is the mock recorder for MockCocoboloClient
type MockCocoboloClientMockRecorder struct {
	mock *MockCocoboloClient
}

// NewMockCocoboloClient creates a new mock instance
func NewMockCocoboloClient(ctrl *gomock.Controller) *MockCocoboloClient {
	mock := &MockCocoboloClient{ctrl: ctrl}
	mock.recorder = &MockCocoboloClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCocoboloClient) EXPECT() *MockCocoboloClientMockRecorder {
	return _m.recorder
}

// MakeRequest mocks base method
func (_m *MockCocoboloClient) MakeRequest(_param0 context.Context, _param1 ...grpc.CallOption) (cocobolo.Cocobolo_MakeRequestClient, error) {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "MakeRequest", _s...)
	ret0, _ := ret[0].(cocobolo.Cocobolo_MakeRequestClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakeRequest indicates an expected call of MakeRequest
func (_mr *MockCocoboloClientMockRecorder) MakeRequest(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MakeRequest", _s...)
}

// MockCocobolo_MakeRequestClient is a mock of Cocobolo_MakeRequestClient interface
type MockCocobolo_MakeRequestClient struct {
	ctrl     *gomock.Controller
	recorder *MockCocobolo_MakeRequestClientMockRecorder
}

// MockCocobolo_MakeRequestClientMockRecorder is the mock recorder for MockCocobolo_MakeRequestClient
type MockCocobolo_MakeRequestClientMockRecorder struct {
	mock *MockCocobolo_MakeRequestClient
}

// NewMockCocobolo_MakeRequestClient creates a new mock instance
func NewMockCocobolo_MakeRequestClient(ctrl *gomock.Controller) *MockCocobolo_MakeRequestClient {
	mock := &MockCocobolo_MakeRequestClient{ctrl: ctrl}
	mock.recorder = &MockCocobolo_MakeRequestClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCocobolo_MakeRequestClient) EXPECT() *MockCocobolo_MakeRequestClientMockRecorder {
	return _m.recorder
}

// CloseSend mocks base method
func (_m *MockCocobolo_MakeRequestClient) CloseSend() error {
	ret := _m.ctrl.Call(_m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) CloseSend() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseSend")
}

// Context mocks base method
func (_m *MockCocobolo_MakeRequestClient) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

// Header mocks base method
func (_m *MockCocobolo_MakeRequestClient) Header() (metadata.MD, error) {
	ret := _m.ctrl.Call(_m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) Header() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Header")
}

// Recv mocks base method
func (_m *MockCocobolo_MakeRequestClient) Recv() (*cocobolo.CallbackResponse, error) {
	ret := _m.ctrl.Call(_m, "Recv")
	ret0, _ := ret[0].(*cocobolo.CallbackResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) Recv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv")
}

// RecvMsg mocks base method
func (_m *MockCocobolo_MakeRequestClient) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

// Send mocks base method
func (_m *MockCocobolo_MakeRequestClient) Send(_param0 *cocobolo.CallbackRequest) error {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

// SendMsg mocks base method
func (_m *MockCocobolo_MakeRequestClient) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

// Trailer mocks base method
func (_m *MockCocobolo_MakeRequestClient) Trailer() metadata.MD {
	ret := _m.ctrl.Call(_m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer
func (_mr *MockCocobolo_MakeRequestClientMockRecorder) Trailer() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Trailer")
}
